name: Production deploy

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: [main-api, fetcher, ratel-web]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}
      - name: Download Web CDK .dist
        uses: actions/download-artifact@v4
        with:
          name: ratel-web-${{ github.sha }}
          path: ./
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      # - name: Setup SSH session with tmate
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     limit-access-to-actor: true
      - name: Deploy
        env:
          ENV: prod
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DOMAIN: ratel.foundation
          STACK: ratel-prod-stack
          DEPLOY_STORYBOOK: false
          BUCKET: ${{ secrets.RATEL_BUCKET }}
        run: |
          npm i -g aws-cdk
          tar xzvf dist.tar.gz
          aws cdk/dist $BUCKET
          # tar xzvf storybook.tar.gz
          # make cdk/.build/image-worker/bootstrap
          make cdk-deploy-v2

  main-api:
    runs-on: ubuntu-22.04
    needs: [ratel-web]
    defaults:
      run:
        working-directory: packages/main-api

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}
      - name: Cache builder
        id: main-api-build-cache
        uses: actions/cache@v4
        with:
          key: main-api-build-${{ runner.os }}-rust-${{ env.RUSTC_HASH }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            main-api-build-${{ runner.os }}-rust-${{ env.RUSTC_HASH }}-
            main-api-build-${{ runner.os }}-
            main-api-build-
          path: |
            packages/main-api/target
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Download Vite Web
        uses: actions/download-artifact@v4
        with:
          name: ratel-web-${{ github.sha }}
          path: ./packages/main-api

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable
      - uses: cargo-bins/cargo-binstall@main
      - name: Install toml-cli
        run: |
          cargo binstall toml-cli --force

      - name: Building APIs
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          ENV: prod
          RUST_LOG: info
          SERVICE: main-api
          DOMAIN: api.ratel.foundation

          BUCKET_NAME: metadata.ratel.foundation
          SLACK_CHANNEL_SPONSOR: ${{ secrets.SLACK_CHANNEL_SPONSOR }}
          SLACK_CHANNEL_ABUSING: ${{ secrets.SLACK_CHANNEL_ABUSING }}

          BINANCE_API_KEY: ${{ secrets.PROD_BINANCE_API_KEY }}
          BINANCE_SECRET_KEY: ${{ secrets.PROD_BINANCE_SECRET_KEY }}
          BINANCE_WEBHOOK: https://api.ratel.foundation/v2/binances/webhooks
          REDIRECT_DOMAIN: https://ratel.foundation

          KAIA_ENDPOINT: https://public-en.node.kaia.io
          KAIA_FEEPAYER_KEY: ${{ secrets.PROD_KAIA_FEEPAYER_KEY }}
          KAIA_FEEPAYER_ADDR: ${{ secrets.PROD_KAIA_FEEPAYER_ADDR }}
          KAIA_OWNER_KEY: ${{ secrets.PROD_KAIA_OWNER_KEY }}
          KAIA_OWNER_ADDR: ${{ secrets.PROD_KAIA_OWNER_KEY_ADDR }}

          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}

          BBS_BLS_X: ${{ secrets.BBS_BLS_X }}
          BBS_BLS_Y: ${{ secrets.BBS_BLS_Y }}
          BBS_BLS_D: ${{ secrets.BBS_BLS_D }}
          BBS_BLS_CRV: ${{ secrets.BBS_BLS_CRV }}

          P256_X: ${{ secrets.P256_X }}
          P256_Y: ${{ secrets.P256_Y }}
          P256_D: ${{ secrets.P256_D }}
          P256_CRV: ${{ secrets.P256_CRV }}

          DYNAMO_TABLE_PREFIX: ratel-prod
          DYNAMO_ENDPOINT: none
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          WEB_BUILD: false

          # NOTE: Change PORTONE API
          PORTONE_API_SECRET: ${{ secrets.DEV_PORTONE_API_SECRET }}
        run: |
          tar xzvf dist.tar.gz
          mv cdk/dist ./

          make docker.build
          make docker.login
          make docker.push

  ratel-web:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ts-packages/web
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@10.15.0 --activate

      - name: Build
        env:
          REGION: ap-northeast-2
          VITE_LOG_LEVEL: info
          VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

          # NOTE: Replace them after accepting.
          VITE_PORTONE_STORE_ID: ${{ secrets.DEV_PORTONE_STORE_ID}}
          VITE_PORTONE_INICIS_CHANNEL_KEY: ${{ secrets.DEV_PORTONE_INICIS_CHANNEL_KEY }}

          VITE_ENV: prod
          VITE_SIGN_DOMAIN: ratel.foundation
          VITE_API_URL: https://ratel.foundation
          VITE_EXPERIMENT: false
          VITE_TELEGRAM_BOTNAME: crypto_ratel_bot
        run: |
          make build
          mv dist ../../cdk/
          cd ../..
          tar czvf dist.tar.gz cdk/dist

      - name: Upload Next.js CDK .next
        uses: actions/upload-artifact@v4
        with:
          name: ratel-web-${{ github.sha }}
          path: ${{ github.workspace }}/dist.tar.gz
          if-no-files-found: error
          retention-days: 7

  # NOTE: migrate to DynamoDB
  # image-worker:
  #   runs-on: ubuntu-22.04
  #   defaults:
  #     run:
  #       working-directory: packages/image-worker
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #         ssh-key: ${{ secrets.PULL_KEY_REPO }}
  #     - uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-northeast-2
  #     - uses: actions-rust-lang/setup-rust-toolchain@v1
  #       with:
  #         components: clippy, rustfmt
  #         target: wasm32-unknown-unknown
  #         toolchain: stable
  #     - uses: cargo-bins/cargo-binstall@main
  #     - name: Install toml-cli
  #       run: |
  #         cargo binstall toml-cli --force
  #     - name: Cache builder
  #       id: image-worker-build-cache
  #       uses: actions/cache@v3
  #       with:
  #         key: image-worker-build-cache
  #         path: |
  #           packages/image-worker/target
  #     - name: Deploy APIs
  #       env:
  #         REGION: ap-northeast-2
  #         ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         ENV: dev
  #         RUST_LOG: debug
  #         SERVICE: image-worker
  #         DATABASE_TYPE: postgres
  #         DATABASE_URL: ${{ secrets.DATABASE_URL }}
  #         MIGRATE: false
  #         DYNAMO_TABLE_PREFIX: ratel-prod
  #       run: |
  #         make build

  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: image-worker-${{ github.sha }}
  #         path: ${{ github.workspace }}/.build/image-worker/bootstrap
  #         if-no-files-found: error
  #         retention-days: 7

  fetcher:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/fetcher
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          ssh-key: ${{ secrets.PULL_KEY_REPO }}
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          toolchain: stable
      - uses: cargo-bins/cargo-binstall@main
      - name: Install dependencies
        run: |
          cargo binstall toml-cli
      - name: Cache builder
        id: fetcher-build-cache
        uses: actions/cache@v3
        with:
          key: fetcher-build-cache
          path: |
            packages/fetcher/target
      - name: Deploy APIs
        env:
          REGION: ap-northeast-2
          ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          ENV: prod
          RUST_LOG: info
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}

          DYNAMO_TABLE_PREFIX: ratel-prod
        run: |
          make docker.build
          make docker.login
          make docker.push
