pub use bdk::prelude::*;

#[component]
pub fn Xlsx(
    #[props(default = "".to_string())] class: String,
    #[props(default = "36".to_string())] width: String,
    #[props(default = "36".to_string())] height: String,
    #[props(default = "none".to_string())] fill: String,
) -> Element {
    rsx! {
        svg {
            class,
            view_box: "0 0 41 41",
            width,
            fill,
            xmlns: "http://www.w3.org/2000/svg",
            height,
            g { "clip-path": "url(#clip0_215_62552)",
                path {
                    stroke: "#D0D5DD",
                    "stroke-width": "1.5",
                    d: "M34.7498 9.24858V36.9619C34.7498 38.7568 33.2947 40.2119 31.4998 40.2119H9.5C7.70507 40.2119 6.25 38.7568 6.25 36.9619V4.96192C6.25 3.16699 7.70508 1.71191 9.5 1.71191H26.5445L34.7498 9.24858Z",
                }
                mask { fill: "white", id: "path-2-inside-1_215_62552",
                    path { d: "M25.5 1.96191H34V10.4619H26.5C25.9477 10.4619 25.5 10.0142 25.5 9.46191V1.96191Z" }
                }
                path {
                    d: "M25.5 1.96191H34H25.5ZM34 11.4619H26.5C25.3954 11.4619 24.5 10.5665 24.5 9.46191H26.5H34V11.4619ZM26.5 11.4619C25.3954 11.4619 24.5 10.5665 24.5 9.46191V1.96191H26.5V9.46191V11.4619ZM34 1.96191V10.4619V1.96191Z",
                    fill: "#D0D5DD",
                    mask: "url(#path-2-inside-1_215_62552)",
                }
                rect {
                    width: "30",
                    height: "13",
                    fill: "#17B26A",
                    x: "1.5",
                    rx: "2",
                    y: "20.9619",
                }
                path {
                    fill: "white",
                    d: "M8.81258 30.9619L7.38258 28.8119L6.12258 30.9619H4.18258L6.43258 27.3919L4.13258 23.9419H6.12258L7.53258 26.0619L8.77258 23.9419H10.7126L8.48258 27.4819L10.8026 30.9619H8.81258ZM13.371 29.6419H15.611V30.9619H11.661V23.9419H13.371V29.6419ZM18.9666 31.0319C18.4533 31.0319 17.9933 30.9486 17.5866 30.7819C17.18 30.6152 16.8533 30.3686 16.6066 30.0419C16.3666 29.7152 16.24 29.3219 16.2266 28.8619H18.0466C18.0733 29.1219 18.1633 29.3219 18.3166 29.4619C18.47 29.5952 18.67 29.6619 18.9166 29.6619C19.17 29.6619 19.37 29.6052 19.5166 29.4919C19.6633 29.3719 19.7366 29.2086 19.7366 29.0019C19.7366 28.8286 19.6766 28.6852 19.5566 28.5719C19.4433 28.4586 19.3 28.3652 19.1266 28.2919C18.96 28.2186 18.72 28.1352 18.4066 28.0419C17.9533 27.9019 17.5833 27.7619 17.2966 27.6219C17.01 27.4819 16.7633 27.2752 16.5566 27.0019C16.35 26.7286 16.2466 26.3719 16.2466 25.9319C16.2466 25.2786 16.4833 24.7686 16.9566 24.4019C17.43 24.0286 18.0466 23.8419 18.8066 23.8419C19.58 23.8419 20.2033 24.0286 20.6766 24.4019C21.15 24.7686 21.4033 25.2819 21.4366 25.9419H19.5866C19.5733 25.7152 19.49 25.5386 19.3366 25.4119C19.1833 25.2786 18.9866 25.2119 18.7466 25.2119C18.54 25.2119 18.3733 25.2686 18.2466 25.3819C18.12 25.4886 18.0566 25.6452 18.0566 25.8519C18.0566 26.0786 18.1633 26.2552 18.3766 26.3819C18.59 26.5086 18.9233 26.6452 19.3766 26.7919C19.83 26.9452 20.1966 27.0919 20.4766 27.2319C20.7633 27.3719 21.01 27.5752 21.2166 27.8419C21.4233 28.1086 21.5266 28.4519 21.5266 28.8719C21.5266 29.2719 21.4233 29.6352 21.2166 29.9619C21.0166 30.2886 20.7233 30.5486 20.3366 30.7419C19.95 30.9352 19.4933 31.0319 18.9666 31.0319ZM26.879 30.9619L25.449 28.8119L24.189 30.9619H22.249L24.499 27.3919L22.199 23.9419H24.189L25.599 26.0619L26.839 23.9419H28.779L26.549 27.4819L28.869 30.9619H26.879Z",
                }
            }
            defs {
                clipPath { id: "clip0_215_62552",
                    rect {
                        fill: "white",
                        height: "40",
                        transform: "translate(0.5 0.961914)",
                        width: "40",
                    }
                }
            }
        }
    }
}
